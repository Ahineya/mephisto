import Osc from "./osc.mephisto";
import Osc2 from "./osc.mephisto";
import Osc3 from "./osc.mephisto";
import Drum from "./drum.mephisto";

import ADSR from "./adsr.mephisto";

import LowPass from "./lowpass.mephisto";
import Echo from "./echo.mephisto";

import Lib from "./lib.mephisto";
import Phaser from "./phaser.mephisto";

import Karplus from "./karplus.mephisto";

param osc2enabled {
    initial: 0;
    type: C_SLIDER;
    min: 0;
    max: 1;
    step: 1;
};

param osc3enabled {
    initial: 0;
    type: C_SLIDER;
    min: 0;
    max: 1;
    step: 1;
};

param trigger {
    initial: 0;
    type: C_TRIGGER;
};

output out = 0;

input osc1 = 0;
input osc2 = 0;
input osc3 = 0;

input drum = 0;

input echo = 0;
input oscgain = 0;

output trig = 0;

output trigwave = 0;
input phase = 0;

output phaserFreq = 2;

input karplus = 0;

process {
    out = (osc1 + (osc2 * osc2enabled) + (osc3 * osc3enabled)) * oscgain + drum + karplus; //osc1 + drum + (osc2 * osc2enabled) + (osc3 * osc3enabled);

    trigwave = Lib.squarewave(phase);

    trig = (trigwave + 1) / 2;
}

connect {
    Osc.out -> osc1;
    Osc2.out -> osc2;
    Osc3.out -> osc3;
    Drum.out -> drum;

    Karplus.out -> karplus;

    phaserFreq -> Phaser.frequency;
    Phaser.phase -> phase;

    ADSR.curve -> oscgain;

    trig -> ADSR.gate;

    out -> LowPass.audioIn;
    LowPass.audioOut -> Echo.audioIn;
    Echo.audioOut -> OUTPUTS;
}
