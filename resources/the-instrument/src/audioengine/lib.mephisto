export fn sinewave(phase) {
    return sin(phase * 2 * PI);
}

export fn trianglewave(phase) {
    return 1 - 4 * abs(round(phase - 0.25) - (phase - 0.25));
}

export fn sawwave(phase) {
    return 2 * (phase - round(phase));
}

export fn squarewave(phase) {
    return ((phase < 0.5) * 2 - 1);
}

/*
export noise(phase) {
    return rand(phase);
}*/

export fn if_math(cond, a, b) {
    return cond * a + (1 - cond) * b;
}

export fn switch4(n, a, b, c, d) {
    return if_math(n == 0, a,
              if_math(n == 1, b,
              if_math(n == 2, c,
              if_math(n == 3, d, 0))));
}

export fn switch3(n, a, b, c) {
    return if_math(n == 0, a,
              if_math(n == 1, b,
              if_math(n == 2, c, 0)));
}

export fn clamp(x, a, b) {
    return min(max(x, a), b);
}

export fn lerp(a, b, t) {
    return a + (b - a) * t;
}

//export lowpass